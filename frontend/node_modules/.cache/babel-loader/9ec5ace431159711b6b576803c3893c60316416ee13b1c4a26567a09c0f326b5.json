{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nhatv\\\\Documents\\\\Reactjs\\\\Tiktok\\\\frontend\\\\src\\\\components\\\\Search\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames/bind';\nimport HeadlessTippy from '@tippyjs/react/headless';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner, faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport AccountItem from \"../AccountItem\";\nimport { Wrapper as PopperWrapper } from \"../Popper\";\nimport styles from \"./Search.module.scss\";\nimport { SearchIcon } from \"../icon/Icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const cx = classNames.bind(styles);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [showResult, setShowResult] = useState(true);\n  const InputRef = useRef();\n  function handleSetSearchValue(value) {\n    setSearchValue(value);\n  }\n  function handleClearInput() {\n    setSearchValue('');\n    InputRef.current.focus();\n    setSearchResult([]);\n  }\n  function handleHideResult() {\n    setShowResult(false);\n  }\n  useEffect(() => {\n    const url = `http://localhost:3004/users?_limit=5&q=${value}`;\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      // handle error\n    }).then(data => {\n      console.log(data);\n      // setSearchResult(data);\n      // setShowResult(true);\n      // mockapi returns only tasks that match `hello` string\n    }).catch(error => {\n      // handle error\n    });\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(HeadlessTippy, {\n    interactive: true,\n    visible: showResult && searchResult.length > 0,\n    render: attrs => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('search-result'),\n      tabIndex: \"-1\",\n      ...attrs,\n      children: /*#__PURE__*/_jsxDEV(PopperWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('search-title'),\n          children: \"Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), searchResult.map(user => /*#__PURE__*/_jsxDEV(AccountItem, {}, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this),\n    onClickOutside: handleHideResult,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('search'),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        /* The `ref={InputRef}` is assigning a ref to the input element in the JSX code. */\n        ref: InputRef,\n        type: \"text\",\n        placeholder: \"Search\",\n        spellCheck: false,\n        value: searchValue,\n        onChange: e => handleSetSearchValue(e.target.value),\n        onFocus: () => setShowResult(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('clear'),\n        children:\n        /* The `!!searchValue` expression is used to convert the `searchValue` variable\r\n        into a boolean value. */\n        // * nếu searchValue == '', nó sẽ trả về undefined => falsy => false và ngược lại\n        !!searchValue && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: cx('clear-btn'),\n          onClick: handleClearInput,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCircleXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cx('spliter')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cx('search-btn'),\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n          width: '2.4rem',\n          height: '2.4rem'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"vjXN79465OxlQ5FSDQs3qBjf8JU=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","useRef","classNames","HeadlessTippy","FontAwesomeIcon","faSpinner","faCircleXmark","AccountItem","Wrapper","PopperWrapper","styles","SearchIcon","jsxDEV","_jsxDEV","Search","_s","cx","bind","searchValue","setSearchValue","searchResult","setSearchResult","showResult","setShowResult","InputRef","handleSetSearchValue","value","handleClearInput","current","focus","handleHideResult","url","fetch","method","headers","then","res","ok","json","data","console","log","catch","error","interactive","visible","length","render","attrs","className","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","onClickOutside","ref","type","placeholder","spellCheck","onChange","e","target","onFocus","onClick","icon","width","height","_c","$RefreshReg$"],"sources":["C:/Users/nhatv/Documents/Reactjs/Tiktok/frontend/src/components/Search/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport HeadlessTippy from '@tippyjs/react/headless';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faCircleXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport AccountItem from '~/components/AccountItem';\r\nimport { Wrapper as PopperWrapper } from '~/components/Popper';\r\nimport styles from './Search.module.scss';\r\nimport { SearchIcon } from '../icon/Icons';\r\n\r\nfunction Search() {\r\n    const cx = classNames.bind(styles);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [showResult, setShowResult] = useState(true);\r\n    const InputRef = useRef();\r\n    function handleSetSearchValue(value) {\r\n        setSearchValue(value);\r\n    }\r\n    function handleClearInput() {\r\n        setSearchValue('');\r\n        InputRef.current.focus();\r\n        setSearchResult([]);\r\n    }\r\n    function handleHideResult() {\r\n        setShowResult(false);\r\n    }\r\n    useEffect(() => {\r\n        const url = `http://localhost:3004/users?_limit=5&q=${value}`\r\n\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: { 'content-type': 'application/json' },\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                // handle error\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                // setSearchResult(data);\r\n                // setShowResult(true);\r\n                // mockapi returns only tasks that match `hello` string\r\n            })\r\n            .catch((error) => {\r\n                // handle error\r\n            });\r\n    }, [searchValue]);\r\n    return (\r\n        <HeadlessTippy\r\n            interactive\r\n            visible={showResult && searchResult.length > 0}\r\n            render={(attrs) => (\r\n                <div className={cx('search-result')} tabIndex=\"-1\" {...attrs}>\r\n                    <PopperWrapper>\r\n                        <div className={cx('search-title')}>Accounts</div>\r\n                        {searchResult.map((user) => (\r\n                            <AccountItem key={user.id} />\r\n                        ))}\r\n                    </PopperWrapper>\r\n                </div>\r\n            )}\r\n            onClickOutside={handleHideResult}\r\n        >\r\n            <div className={cx('search')}>\r\n                <input\r\n                    /* The `ref={InputRef}` is assigning a ref to the input element in the JSX code. */\r\n                    ref={InputRef}\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    spellCheck={false}\r\n                    value={searchValue}\r\n                    onChange={(e) => handleSetSearchValue(e.target.value)}\r\n                    onFocus={() => setShowResult(true)}\r\n                />\r\n                <div className={cx('clear')}>\r\n                    {\r\n                        /* The `!!searchValue` expression is used to convert the `searchValue` variable\r\n                        into a boolean value. */\r\n                        // * nếu searchValue == '', nó sẽ trả về undefined => falsy => false và ngược lại\r\n                        !!searchValue && (\r\n                            <button className={cx('clear-btn')} onClick={handleClearInput}>\r\n                                <FontAwesomeIcon icon={faCircleXmark} />\r\n                            </button>\r\n                        )\r\n                    }\r\n\r\n                    {/* <FontAwesomeIcon icon={faSpinner} spin /> */}\r\n                </div>\r\n                <span className={cx('spliter')} />\r\n\r\n                <button className={cx('search-btn')}>\r\n                    <SearchIcon width={'2.4rem'} height={'2.4rem'} />\r\n                </button>\r\n            </div>\r\n        </HeadlessTippy>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}