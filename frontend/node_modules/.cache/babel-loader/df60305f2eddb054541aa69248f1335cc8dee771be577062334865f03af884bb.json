{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nhatv\\\\Documents\\\\Reactjs\\\\Tiktok\\\\src\\\\components\\\\Popper\\\\Menu\\\\index.js\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames/bind';\nimport Tippy from '@tippyjs/react/headless';\nimport 'tippy.js/dist/tippy.css'; // optional\n\nimport styles from \"./Menu.module.scss\";\nimport { Wrapper as PopperWrapper } from \"./..\";\nimport MenuItems from \"./MenuItems\";\nimport Header from \"./Header\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nfunction Menu(_ref) {\n  _s();\n  let {\n    children,\n    items = []\n  } = _ref;\n  const [history, setHistory] = useState([{\n    data: items\n  }]);\n  const current = history[history.length - 1];\n  const renderItems = () => {\n    return current.data.map((item, index) => {\n      // Trong JavaScript, toán tử !! được gọi là toán tử double negation (đảo ngược hai lần). Nó được sử dụng để chuyển đổi một giá trị sang kiểu boolean và giữ nguyên giá trị ban đầu.\n      // Cách hoạt động của toán tử !! như sau:\n\n      // Khi bạn áp dụng toán tử ! (NOT) lên một giá trị, nó sẽ đảo ngược giá trị thành giá trị boolean đối lập:\n\n      // Nếu giá trị là falsy (như null, undefined, false, 0, NaN, hoặc ''), thì !value sẽ trả về true.\n      // Nếu giá trị là truthy (bất kỳ giá trị nào không phải falsy), thì !value sẽ trả về false.\n      // Khi áp dụng toán tử ! lần thứ hai vào kết quả từ bước trên, nó sẽ đảo ngược kết quả lần nữa, đưa giá trị ban đầu về lại giá trị boolean ban đầu:\n\n      // Nếu kết quả từ bước trước là true (giá trị ban đầu là falsy), thì !true sẽ trả về false.\n      // Nếu kết quả từ bước trước là false (giá trị ban đầu là truthy), thì !false sẽ trả về true.\n      // Do đó, toán tử !! thường được sử dụng để kiểm tra xem một giá trị có phải là falsy hay không và chuyển đổi nó thành giá trị boolean tương ứng (false cho falsy và true cho truthy).\n      // const isParent = !!item.children;\n      // const isParent = !!item.children;\n      let isParent;\n      if (item.children) {\n        isParent = true;\n      } else {\n        isParent = false;\n      }\n      console.log(isParent);\n      return /*#__PURE__*/_jsxDEV(MenuItems, {\n        data: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Tippy, {\n    interactive: true,\n    visible: true,\n    render: attrs => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('menu-items'),\n      tabIndex: \"-1\",\n      ...attrs,\n      children: /*#__PURE__*/_jsxDEV(PopperWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: 'Ngôn ngữ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), renderItems()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Menu, \"UE7DUDARgifM2bLzDAh71r6Z/DY=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["classNames","Tippy","styles","Wrapper","PopperWrapper","MenuItems","Header","useState","jsxDEV","_jsxDEV","cx","bind","Menu","_ref","_s","children","items","history","setHistory","data","current","length","renderItems","map","item","index","isParent","console","log","fileName","_jsxFileName","lineNumber","columnNumber","interactive","visible","render","attrs","className","tabIndex","title","_c","$RefreshReg$"],"sources":["C:/Users/nhatv/Documents/Reactjs/Tiktok/src/components/Popper/Menu/index.js"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport 'tippy.js/dist/tippy.css'; // optional\r\n\r\nimport styles from './Menu.module.scss';\r\nimport { Wrapper as PopperWrapper } from '~/components/Popper';\r\nimport MenuItems from './MenuItems';\r\nimport Header from './Header';\r\nimport { useState } from 'react';\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction Menu({ children, items = [] }) {\r\n    const [history, setHistory] = useState([{ data: items }]);\r\n    const current = history[history.length - 1];\r\n\r\n    const renderItems = () => {\r\n        return current.data.map((item, index) => {\r\n            // Trong JavaScript, toán tử !! được gọi là toán tử double negation (đảo ngược hai lần). Nó được sử dụng để chuyển đổi một giá trị sang kiểu boolean và giữ nguyên giá trị ban đầu.\r\n            // Cách hoạt động của toán tử !! như sau:\r\n\r\n            // Khi bạn áp dụng toán tử ! (NOT) lên một giá trị, nó sẽ đảo ngược giá trị thành giá trị boolean đối lập:\r\n\r\n            // Nếu giá trị là falsy (như null, undefined, false, 0, NaN, hoặc ''), thì !value sẽ trả về true.\r\n            // Nếu giá trị là truthy (bất kỳ giá trị nào không phải falsy), thì !value sẽ trả về false.\r\n            // Khi áp dụng toán tử ! lần thứ hai vào kết quả từ bước trên, nó sẽ đảo ngược kết quả lần nữa, đưa giá trị ban đầu về lại giá trị boolean ban đầu:\r\n\r\n            // Nếu kết quả từ bước trước là true (giá trị ban đầu là falsy), thì !true sẽ trả về false.\r\n            // Nếu kết quả từ bước trước là false (giá trị ban đầu là truthy), thì !false sẽ trả về true.\r\n            // Do đó, toán tử !! thường được sử dụng để kiểm tra xem một giá trị có phải là falsy hay không và chuyển đổi nó thành giá trị boolean tương ứng (false cho falsy và true cho truthy).\r\n            // const isParent = !!item.children;\r\n            // const isParent = !!item.children;\r\n            let isParent;\r\n            if (item.children) {\r\n                isParent = true;\r\n            } else {\r\n                isParent = false;\r\n            }\r\n            console.log(isParent);\r\n            return <MenuItems key={index} data={item} />;\r\n        });\r\n    };\r\n    return (\r\n        <Tippy\r\n            interactive\r\n            visible\r\n            render={(attrs) => (\r\n                <div className={cx('menu-items')} tabIndex=\"-1\" {...attrs}>\r\n                    <PopperWrapper>\r\n                        <Header title={'Ngôn ngữ'} />\r\n                        {renderItems()}\r\n                    </PopperWrapper>\r\n                </div>\r\n            )}\r\n        >\r\n            {children}\r\n        </Tippy>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAO,yBAAyB,CAAC,CAAC;;AAElC,OAAOC,MAAM;AACb,SAASC,OAAO,IAAIC,aAAa;AACjC,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,EAAE,GAAGV,UAAU,CAACW,IAAI,CAACT,MAAM,CAAC;AAElC,SAASU,IAAIA,CAAAC,IAAA,EAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,QAAQ;IAAEC,KAAK,GAAG;EAAG,CAAC,GAAAH,IAAA;EAClC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC;IAAEY,IAAI,EAAEH;EAAM,CAAC,CAAC,CAAC;EACzD,MAAMI,OAAO,GAAGH,OAAO,CAACA,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC;EAE3C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,OAAOF,OAAO,CAACD,IAAI,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACrC;MACA;;MAEA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA,IAAIC,QAAQ;MACZ,IAAIF,IAAI,CAACT,QAAQ,EAAE;QACfW,QAAQ,GAAG,IAAI;MACnB,CAAC,MAAM;QACHA,QAAQ,GAAG,KAAK;MACpB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,oBAAOjB,OAAA,CAACJ,SAAS;QAAac,IAAI,EAAEK;MAAK,GAAlBC,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAChD,CAAC,CAAC;EACN,CAAC;EACD,oBACIvB,OAAA,CAACR,KAAK;IACFgC,WAAW;IACXC,OAAO;IACPC,MAAM,EAAGC,KAAK,iBACV3B,OAAA;MAAK4B,SAAS,EAAE3B,EAAE,CAAC,YAAY,CAAE;MAAC4B,QAAQ,EAAC,IAAI;MAAA,GAAKF,KAAK;MAAArB,QAAA,eACrDN,OAAA,CAACL,aAAa;QAAAW,QAAA,gBACVN,OAAA,CAACH,MAAM;UAACiC,KAAK,EAAE;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC5BV,WAAW,CAAC,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CACP;IAAAjB,QAAA,EAEDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEhB;AAAClB,EAAA,CA9CQF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAgDb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}